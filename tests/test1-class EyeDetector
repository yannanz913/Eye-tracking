import cv2
import numpy as np


def build_pupil_detector(self, pupilParams):
    self.pupilParams = pupilParams


def apply_pupil_detector(img):
    # img_thresholded =  cv2.threshold(img, pupilParams['threshold?? ?'])
    # create a trackbar instead of including img_thresholded?
    pupil_circles = cv2.HoughCircles(img, cv2.HOUGH_GRADIENT, 1, 50,
                                          param1=50, param2=50, minRadius=0, maxRadius=0)


def draw_pupil(img):
    # draw the pupil on the img
    circles = np.uint16(np.around(apply_pupil_detector))
    for i in circles[0, :]:
        cv2.circle(img, (i[0], i[1]), i[2], (0, 255, 0), 2)
        cv2.circle(img, (i[0], i[1]), 2, (0, 0, 255), 3)
    # need to be returned using cv2.imshow
    return img
